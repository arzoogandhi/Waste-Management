/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.TransformManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HealthDeptEnterprise;
import Business.Enterprise.RecyclePlantEnterprise;
import Business.Network.Network;
import Business.Organization.HealthDept.ProductGradingCentreOrganization;
import Business.Organization.Organization;
//productGradingCentreOrganization
import Business.Organization.RecyclePlant.TransformationPlantOrganization;
import Business.Organization.WasteManagement.RawMaterial;
import Business.Organization.WasteManagement.RawmaterialList;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.GradingOfficerWorkRequest;
import Business.WorkQueue.TransformManagerWorkRequest;
import Business.WorkQueue.WasteSegregatorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ANKIT
 */
public class ViewRawMaterialJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewRawMaterialJPanel
     */
    private JPanel userProcessContainer;
    private TransformManagerWorkRequest request;
    private UserAccount userAccount;
    private int selectedRow; 
    private Enterprise enterprise;
    private EcoSystem business;
    RawmaterialList rawlist = new RawmaterialList();
    private ProductGradingCentreOrganization productGradingCentreOrganization;
    
    ViewRawMaterialJPanel(JPanel userProcessContainer, TransformManagerWorkRequest request, UserAccount userAccount, int selectedRow, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.userAccount = userAccount;
        this.selectedRow = selectedRow;
        this.enterprise = enterprise;
        this.business = business;
        populateTable();
       
    }

//    public ViewRawMaterialJPanel(JPanel userProcessContainer, GradingOfficerWorkRequest request, UserAccount userAccount, int selectedRow, Enterprise enterprise, EcoSystem business) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
    public void populateTable(){
        
          DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
        dtm.setRowCount(0);
      for(RawMaterial rawmat : request.getTransformRawList())
         {
            Object[] row = new Object[2];
            row[0] = rawmat.getRawmatname();
            row[1] = rawmat.getRawmatweight();

            dtm.addRow(row);
        }
  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        sendhealthdept_btn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 231, 226));

        jTable1.setBackground(new java.awt.Color(204, 255, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Raw Materials", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("List of Raw Materials");

        backJButton.setBackground(new java.awt.Color(0, 204, 153));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        sendhealthdept_btn.setBackground(new java.awt.Color(0, 204, 153));
        sendhealthdept_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sendhealthdept_btn.setText("Send to Health Department");
        sendhealthdept_btn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sendhealthdept_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendhealthdept_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(222, 222, 222)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(225, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendhealthdept_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(223, 223, 223))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(88, 88, 88)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sendhealthdept_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(237, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void sendhealthdept_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendhealthdept_btnActionPerformed
      request.setStatus("Sent to Health Department");
      
        GradingOfficerWorkRequest gradereq = new GradingOfficerWorkRequest();
       gradereq.setGradeRawList(request.getTransformRawList());
      gradereq.setSource(request.getSource());
      gradereq.setSender(userAccount);
      gradereq.setStatus("Received");
      
      
    Organization org = null;
    
    
    for (Network network : business.getNetworkList()) {
                    for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (enterprise instanceof HealthDeptEnterprise) {
                            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof ProductGradingCentreOrganization){
                org = organization;
                break;
            }
                            }
                        }

                    }
                }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(gradereq);
            userAccount.getWorkQueue().getWorkRequestList().add(gradereq);
        }
        JOptionPane.showMessageDialog(null, "Request successfully sent to Health Department", "Information Message", JOptionPane.INFORMATION_MESSAGE);
    String to = "";
       String from = org.getWorkQueue().getWorkRequestList().get(0).getSender().getEmail();
       String subject = "New request has been generated";
       String message = "Hi Greeting of the day!!\n\n A new raw material quality grading task has been sent\n\n You can assign it to yourself\n\n Thank You";
       
       for(UserAccount ua : org.getUserAccountDirectory().getUserAccountList()){
           to += ","+ua.getEmail();
       }
        sendEmail(from,to, subject, message);
    
        JOptionPane.showMessageDialog(null, "Request successfully sent to Health Department", "Information Message", JOptionPane.INFORMATION_MESSAGE);


         
       // TODO add your handling code here:
    }//GEN-LAST:event_sendhealthdept_btnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton sendhealthdept_btn;
    // End of variables declaration//GEN-END:variables

public void sendEmail(String from,String to,String sub,String msg){
 // Recipient's email ID needs to be mentioned.
     
      // Assuming you are sending email from localhost
      String host = "localhost";

      // Get system properties
      Properties properties = System.getProperties();

      // Setup mail server
      properties.setProperty("mail.host", "smtp.gmail.com");
      properties.setProperty("mail.smtp.port", "465");
      properties.setProperty("mail.defaultEncoding", "UTF-8");
      properties.setProperty("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
      properties.setProperty("mail.smtp.socketFactory.fallback", "false");
      properties.setProperty("mail.smtp.ssl.enable", "true");
      properties.setProperty("mail.smtp.socketFactory.port", "465");
      properties.setProperty("mail.smtp.auth", "true");
      properties.setProperty("mail.smtp.starttls.enable", "true");
      
      properties.setProperty("mail.smtp.starttls.required", "true");
      properties.setProperty("mail.smtp.starttls.enable", "true");
      
      
      
      
      // Get the default Session object.
      Session session = Session.getDefaultInstance(properties);

      try {
         // Create a default MimeMessage object.
         MimeMessage message = new MimeMessage(session);

         // Set From: header field of the header.
         message.setFrom(new InternetAddress(from));

         // Set To: header field of the header.
         message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

         // Set Subject: header field
         message.setSubject(sub);

         // Now set the actual message
         message.setText(msg);

         // Send message
         Transport.send(message,from,"");
         System.out.println("Sent message successfully....");
      } catch (MessagingException mex) {
         mex.printStackTrace();
      }
}

}