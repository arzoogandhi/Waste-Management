/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.WasteCollectorRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.WasteManagement.WasteCollectorOrganization;
import Business.Organization.WasteManagement.WasteSegregatorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WasteSegregatorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.Color;
import java.util.Date;
import java.util.List;
import java.util.*;
import javax.mail.*;
import javax.mail.internet.*;
//import javax.activation.*;
import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author singh
 */
public class WasteCollectorWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form WasteCollectorWorkArea
     */
    
     private JPanel userProcessContainer;
    private WasteCollectorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public WasteCollectorWorkArea(JPanel userProcessContainer, UserAccount account, WasteCollectorOrganization organization, Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        valueLabel.setText(enterprise.getName());
     populateRequestTable();
    }
    
//    public WasteCollectorWorkArea() {
//        initComponents();
//    }

    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) waste_collector.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[3];
        row[0] = request.getSource();
            row[1] = request.getWeight();
            row[2] = "Sent";
//            String result = ((WasteCollectorOrganization) request).getTestResult();
//            row[3] = result == null ? "Waiting" : result;
            
            model.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        waste_collector = new javax.swing.JTable();
        Source_jlabel = new javax.swing.JLabel();
        source_jtext = new javax.swing.JTextField();
        weight = new javax.swing.JLabel();
        weight_jtext1 = new javax.swing.JTextField();
        submit_btn = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        refreshTestJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        waste_collector.setBackground(new java.awt.Color(204, 255, 204));
        waste_collector.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        waste_collector.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Source", "Weight", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(waste_collector);
        if (waste_collector.getColumnModel().getColumnCount() > 0) {
            waste_collector.getColumnModel().getColumn(0).setResizable(false);
            waste_collector.getColumnModel().getColumn(1).setResizable(false);
            waste_collector.getColumnModel().getColumn(2).setResizable(false);
        }

        Source_jlabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Source_jlabel.setForeground(new java.awt.Color(0, 102, 102));
        Source_jlabel.setText("Source");

        source_jtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                source_jtextActionPerformed(evt);
            }
        });
        source_jtext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                source_jtextKeyTyped(evt);
            }
        });

        weight.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        weight.setForeground(new java.awt.Color(0, 102, 102));
        weight.setText("Weight");

        weight_jtext1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                weight_jtext1KeyTyped(evt);
            }
        });

        submit_btn.setBackground(new java.awt.Color(0, 204, 153));
        submit_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        submit_btn.setText("Submit");
        submit_btn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        submit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_btnActionPerformed(evt);
            }
        });

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");

        valueLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        valueLabel.setText("<value>");

        refreshTestJButton.setBackground(new java.awt.Color(0, 204, 153));
        refreshTestJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("lbs.");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/waste-collector-posing-behind-trash-bags-young-green-reflective-vest-few-white-background-63555196.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80)
                .addComponent(refreshTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addComponent(Source_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(source_jtext, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(weight_jtext1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(700, 700, 700)
                .addComponent(submit_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 2610, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(refreshTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Source_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(source_jtext, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weight_jtext1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(submit_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1190, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();

    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void submit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_btnActionPerformed
       try{
        if(source_jtext.getText().isEmpty() && weight_jtext1.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter Source and Weight details");
            return;
        }
        if (source_jtext.getText().isEmpty()){
           source_jtext.setBorder(BorderFactory.createLineBorder(Color.RED));
            Source_jlabel.setForeground(Color.red);
            JOptionPane.showMessageDialog(userProcessContainer,"Source cannot be empty");
            return;

        }
        else if(!usernamePatternCorrect()){
            JOptionPane.showMessageDialog(userProcessContainer, "Source Name should be the valid");
            source_jtext.setBorder(BorderFactory.createLineBorder(Color.RED));
             Source_jlabel.setForeground(Color.red);
             return;
        }


        
        
          if (weight_jtext1.getText().isEmpty()){
           weight_jtext1.setBorder(BorderFactory.createLineBorder(Color.RED));
            weight.setForeground(Color.red);
            JOptionPane.showMessageDialog(userProcessContainer,"Weight cannot be empty");
            return;

        }
          else if(!weightPatternCorrect()){
            JOptionPane.showMessageDialog(userProcessContainer, "weight should be the valid");
            weight_jtext1.setBorder(BorderFactory.createLineBorder(Color.RED));
             weight.setForeground(Color.red);
             return;
        }
        
            

          
             weight_jtext1.setBorder(BorderFactory.createLineBorder(Color.BLACK));
             weight.setForeground(Color.black);
             source_jtext.setBorder(BorderFactory.createLineBorder(Color.BLACK));
             Source_jlabel.setForeground(Color.black); 



      

      String source = source_jtext.getText();
      float weight =  Float.parseFloat(weight_jtext1.getText());
      WasteSegregatorWorkRequest request = new WasteSegregatorWorkRequest();
      request.setSource(source);
      request.setWeight(weight);
      request.setSender(userAccount);
      request.setStatus("Recieved");
     
      Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof WasteSegregatorOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
      
      populateRequestTable();
     JOptionPane.showMessageDialog(null, "Segregation Request successfully added", "Information Message", JOptionPane.INFORMATION_MESSAGE);

       source_jtext.setText("");
       weight_jtext1.setText("");
       
       String to = "";
       String from = userAccount.getEmail();
       String subject = "New request has been generated";
       String message = "Hi Greeting of the day!!\n\n A new waste collection has been sent\n\n You can assign it to yourself\n\n Thank You";
       
       for(UserAccount ua : org.getUserAccountDirectory().getUserAccountList()){
           to += ","+ua.getEmail();
       }
        sendEmail(from,to, subject, message);
//        sendEmail(from,"singhsonali978@gmail.com", subject, message);
         }
       
       catch(Exception ex){
           ex.printStackTrace();
       }
       
       
    }//GEN-LAST:event_submit_btnActionPerformed

    private void source_jtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_source_jtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_source_jtextActionPerformed

    boolean usernamePatternCorrect(){
        Pattern p= Pattern.compile("^[a-zA-Z\\s]*$");
        Matcher m = p.matcher(source_jtext.getText());
        return m.matches();
    }
    
      boolean weightPatternCorrect(){
        //Pattern p= Pattern.compile("^(?=.)([+-]?([0-9]*)(\\.([0-9]+))?)$");
          boolean b= (weight_jtext1.getText()).matches("^\\d{1,5}$|^(?=\\d+[.,]\\d+$).{3,6}$");
        return b;
    }
    
    private void source_jtextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_source_jtextKeyTyped

        
    }//GEN-LAST:event_source_jtextKeyTyped

    private void weight_jtext1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weight_jtext1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_weight_jtext1KeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Source_jlabel;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JTextField source_jtext;
    private javax.swing.JButton submit_btn;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable waste_collector;
    private javax.swing.JLabel weight;
    private javax.swing.JTextField weight_jtext1;
    // End of variables declaration//GEN-END:variables


    public void sendEmail(String from,String to,String sub,String msg){
 // Recipient's email ID needs to be mentioned.
     
      // Assuming you are sending email from localhost
      String host = "localhost";

      // Get system properties
      Properties properties = System.getProperties();

      // Setup mail server
      properties.setProperty("mail.host", "smtp.gmail.com");
      properties.setProperty("mail.smtp.port", "465");
      properties.setProperty("mail.defaultEncoding", "UTF-8");
      properties.setProperty("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
      properties.setProperty("mail.smtp.socketFactory.fallback", "false");
      properties.setProperty("mail.smtp.ssl.enable", "true");
      properties.setProperty("mail.smtp.socketFactory.port", "465");
      properties.setProperty("mail.smtp.auth", "true");
      properties.setProperty("mail.smtp.starttls.enable", "true");
      
      properties.setProperty("mail.smtp.starttls.required", "true");
      properties.setProperty("mail.smtp.starttls.enable", "true");
      
      
      
      
      // Get the default Session object.
      Session session = Session.getDefaultInstance(properties);

      try {
         // Create a default MimeMessage object.
         MimeMessage message = new MimeMessage(session);

         // Set From: header field of the header.
         message.setFrom(new InternetAddress(from));

         // Set To: header field of the header.
         message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

         // Set Subject: header field
         message.setSubject(sub);

         // Now set the actual message
         message.setText(msg);

         // Send message
         Transport.send(message,from,"#Ss986966");
         System.out.println("Sent message successfully....");
      } catch (MessagingException mex) {
         mex.printStackTrace();
      }
   }
}

